#!/usr/bin/env python3
"""
Script de prueba para verificar que el sistema de detecci√≥n de videos
registre correctamente los elementos en Google Sheets/Excel.
"""

import os
import sys
import logging
from enhanced_food_detector import EnhancedFoodObjectDetector

# Configurar logging detallado
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def test_video_to_excel_integration():
    """
    Prueba la integraci√≥n completa de video con Excel/Google Sheets
    """
    print("üé¨ PRUEBA: DETECCI√ìN DE VIDEO CON REGISTRO EN EXCEL")
    print("=" * 60)
    
    # Verificar si hay videos de prueba disponibles
    video_files = []
    for ext in ['.mp4', '.avi', '.mov', '.mkv']:
        for file in os.listdir('.'):
            if file.lower().endswith(ext):
                video_files.append(file)
    
    if not video_files:
        print("‚ö†Ô∏è No se encontraron videos de prueba en el directorio actual")
        print("üìù Para probar, coloca un video (.mp4, .avi, .mov, .mkv) en este directorio")
        return False
    
    print(f"üìπ Videos encontrados: {', '.join(video_files)}")
    video_path = video_files[0]
    output_path = f"test_detected_{os.path.splitext(video_path)[0]}.mp4"
    
    print(f"üì• Video de entrada: {video_path}")
    print(f"üì§ Video de salida: {output_path}")
    print("-" * 60)
    
    try:
        # Crear detector con configuraci√≥n espec√≠fica para prueba
        detector = EnhancedFoodObjectDetector(
            model_path="yolov8n.pt",
            confidence_threshold=0.3,  # Umbral m√°s bajo para detectar m√°s objetos
            video_source=video_path,
            output_video_path=output_path
        )
        
        # Verificar conexi√≥n a Google Sheets ANTES de procesar
        print("üîç VERIFICACI√ìN INICIAL:")
        print(f"  ‚Ä¢ Google Sheets: {'‚úÖ CONECTADO' if detector.sheets_manager.is_connected else '‚ùå DESCONECTADO'}")
        
        if not detector.sheets_manager.is_connected:
            print("‚ùå ERROR: Google Sheets no est√° conectado")
            print("   Verifica el archivo 'calm-segment-credentials.json'")
            return False
        
        # Obtener informaci√≥n del spreadsheet
        try:
            sheet_info = detector.sheets_manager.get_spreadsheet_info()
            print(f"  ‚Ä¢ Documento: {sheet_info.get('title', 'N/A')}")
            print(f"  ‚Ä¢ Registros actuales: {sheet_info.get('data_rows', 0)}")
            print(f"  ‚Ä¢ URL: {detector.sheets_manager.get_spreadsheet_url()}")
        except Exception as e:
            print(f"  ‚Ä¢ Error obteniendo info del sheet: {e}")
        
        print("-" * 60)
        print("üöÄ INICIANDO PROCESAMIENTO DE VIDEO...")
        print("   Los elementos detectados DEBER√çAN aparecer en el Excel/Google Sheets")
        print("-" * 60)
        
        # Ejecutar detecci√≥n
        detector.run_enhanced_detection()
        
        # Verificar resultados
        print("\n" + "=" * 60)
        print("üìä RESULTADOS DE LA PRUEBA")
        print("=" * 60)
        
        # Verificar si se cre√≥ el video de salida
        if os.path.exists(output_path):
            print(f"‚úÖ Video de salida creado: {output_path}")
        else:
            print("‚ùå No se cre√≥ el video de salida")
        
        # Verificar estado final del tracking
        tracked_count = len(detector._tracked_objects)
        registered_count = sum(1 for obj in detector._tracked_objects.values() if obj['registered'])
        
        print(f"üéØ Objetos tracked: {tracked_count}")
        print(f"üì¶ Objetos registrados en Excel: {registered_count}")
        
        if registered_count > 0:
            print("‚úÖ ¬°√âXITO! Se registraron elementos en Excel/Google Sheets")
            print("\nüìã ELEMENTOS REGISTRADOS:")
            for obj_key, obj_info in detector._tracked_objects.items():
                if obj_info['registered']:
                    item_name = obj_info['detection']['class_name']
                    item_id = obj_info.get('item_id', 'N/A')
                    quantity = obj_info['quantity']
                    print(f"  ‚Ä¢ {item_name} x{quantity} (ID: {item_id})")
        else:
            print("‚ö†Ô∏è No se registraron elementos en Excel")
            print("   Posibles causas:")
            print("   - No se detectaron objetos suficientes")
            print("   - Los objetos no cumplieron el umbral de confirmaci√≥n")
            print("   - Problema de conexi√≥n con Google Sheets")
        
        # Mostrar informaci√≥n de Google Sheets al final
        try:
            final_info = detector.sheets_manager.get_spreadsheet_info()
            final_rows = final_info.get('data_rows', 0)
            print(f"\nüìä Registros finales en Excel: {final_rows}")
        except Exception as e:
            print(f"‚ùå Error verificando estado final: {e}")
        
        return registered_count > 0
        
    except Exception as e:
        logger.error(f"‚ùå Error durante la prueba: {e}")
        return False

def main():
    """Funci√≥n principal"""
    print("üéØ PRUEBA DE INTEGRACI√ìN: VIDEO ‚Üí EXCEL/GOOGLE SHEETS")
    print("Este script verifica que los elementos detectados en videos")
    print("se registren correctamente en el Excel/Google Sheets")
    print()
    
    success = test_video_to_excel_integration()
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ PRUEBA EXITOSA: El sistema registra elementos de video en Excel")
    else:
        print("‚ùå PRUEBA FALLIDA: Revisar configuraci√≥n y logs")
    print("=" * 60)

if __name__ == "__main__":
    main()
